import{_ as o,c as t,a0 as d,o as c}from"./chunks/framework.BFeFTQGI.js";const m=JSON.parse('{"title":"vnode的不同类型","description":"","frontmatter":{},"headers":[],"relativePath":"h/start.md","filePath":"h/start.md"}'),r={name:"h/start.md"};function a(l,e,n,i,s,p){return c(),t("div",null,e[0]||(e[0]=[d('<h1 id="vnode的不同类型" tabindex="-1">vnode的不同类型 <a class="header-anchor" href="#vnode的不同类型" aria-label="Permalink to &quot;vnode的不同类型&quot;">​</a></h1><p>我们知道 <code>h</code> 函数核心是用来：<strong>创建 <code>vnode</code></strong> 的，但是对于 <code>vnode</code> 而言，它存在很多种不同的节点类型。</p><p>查看 <code>packages/runtime-core/src/renderer.ts</code> 中第 <code>354</code> 行 <code>patch</code> 方法的代码可知，<code>Vue</code> 总共处理了：</p><ol><li><code>Text</code>：文本节点</li><li><code>Comment</code>：注释节点</li><li><code>Static</code>：静态 <code>DOM</code> 节点</li><li><code>Fragment</code>：包含多个根节点的模板被表示为一个片段 (fragment)</li><li><code>ELEMENT</code>: <code>DOM</code> 节点</li><li><code>COMPONENT</code>：组件</li><li><code>TELEPORT</code>：新的 <a href="https://cn.vuejs.org/guide/built-ins/teleport.html#teleport" target="_blank" rel="noreferrer">内置组件</a></li><li><code>SUSPENSE</code>：新的 <a href="https://cn.vuejs.org/guide/built-ins/suspense.html#suspense" target="_blank" rel="noreferrer">内置组件</a></li><li>…</li></ol><p>各种不同类型的节点，而每一种类型的处理都对应着不同的 <code>VNode</code>。</p>',5)]))}const u=o(r,[["render",a]]);export{m as __pageData,u as default};
